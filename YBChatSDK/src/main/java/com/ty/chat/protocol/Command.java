// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kfMessage.proto

package com.ty.chat.protocol;

/**
 * Protobuf enum {@code protocol.Command}
 */
public enum Command
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * 异常
   * </pre>
   *
   * <code>COMMAND_UNKNOW = 0;</code>
   */
  COMMAND_UNKNOW(0),
  /**
   * <pre>
   *上线
   * </pre>
   *
   * <code>COMMAND_ONLINE_REQ = 1;</code>
   */
  COMMAND_ONLINE_REQ(1),
  /**
   * <pre>
   *上线响应
   * </pre>
   *
   * <code>COMMAND_ONLINE_RESP = 2;</code>
   */
  COMMAND_ONLINE_RESP(2),
  /**
   * <pre>
   *传输
   * </pre>
   *
   * <code>COMMAND_TRANSMISSION_REQ = 3;</code>
   */
  COMMAND_TRANSMISSION_REQ(3),
  /**
   * <pre>
   *传输响应
   * </pre>
   *
   * <code>COMMAND_TRANSMISSION_RESP = 4;</code>
   */
  COMMAND_TRANSMISSION_RESP(4),
  /**
   * <pre>
   * 拦截
   * </pre>
   *
   * <code>COMMAND_INTERCEPT_REQ = 5;</code>
   */
  COMMAND_INTERCEPT_REQ(5),
  /**
   * <pre>
   * 拦截响应
   * </pre>
   *
   * <code>COMMAND_INTERCEPT_RESP = 6;</code>
   */
  COMMAND_INTERCEPT_RESP(6),
  /**
   * <pre>
   * 插入
   * </pre>
   *
   * <code>COMMAND_INSERT_REQ = 7;</code>
   */
  COMMAND_INSERT_REQ(7),
  /**
   * <pre>
   * 插入响应
   * </pre>
   *
   * <code>COMMAND_INSERT_RESP = 8;</code>
   */
  COMMAND_INSERT_RESP(8),
  /**
   * <pre>
   * 协同  
   * </pre>
   *
   * <code>COMMAND_SYNERGY_REQ = 9;</code>
   */
  COMMAND_SYNERGY_REQ(9),
  /**
   * <pre>
   * 协同响应
   * </pre>
   *
   * <code>COMMAND_SYNERGY_RESP = 10;</code>
   */
  COMMAND_SYNERGY_RESP(10),
  /**
   * <pre>
   *普通消息发送
   * </pre>
   *
   * <code>COMMAND_CHAT_REQ = 11;</code>
   */
  COMMAND_CHAT_REQ(11),
  /**
   * <pre>
   *普通消息回执
   * </pre>
   *
   * <code>COMMAND_CHAT_RESP = 12;</code>
   */
  COMMAND_CHAT_RESP(12),
  /**
   * <pre>
   *会话关闭请求
   * </pre>
   *
   * <code>COMMAND_CLOSE_REQ = 13;</code>
   */
  COMMAND_CLOSE_REQ(13),
  /**
   * <pre>
   *会话结束响应信息;
   * </pre>
   *
   * <code>COMMAND_CLOSE_RESP = 14;</code>
   */
  COMMAND_CLOSE_RESP(14),
  /**
   * <pre>
   *发出撤消消息指令
   * </pre>
   *
   * <code>COMMAND_CANCEL_MSG_REQ = 15;</code>
   */
  COMMAND_CANCEL_MSG_REQ(15),
  /**
   * <pre>
   *收到撤消消息指令
   * </pre>
   *
   * <code>COMMAND_CANCEL_MSG_RESP = 16;</code>
   */
  COMMAND_CANCEL_MSG_RESP(16),
  /**
   * <pre>
   * 未结束会话消息推送（重新上线）
   * </pre>
   *
   * <code>COMMAND_UNEND_SESSION_MSG = 17;</code>
   */
  COMMAND_UNEND_SESSION_MSG(17),
  /**
   * <pre>
   *创建会话;
   * </pre>
   *
   * <code>COMMAND_CREATE_SESSION = 18;</code>
   */
  COMMAND_CREATE_SESSION(18),
  /**
   * <pre>
   *向客服推送新的会话;
   * </pre>
   *
   * <code>COMMAND_PUSH_NEW_SESSION = 19;</code>
   */
  COMMAND_PUSH_NEW_SESSION(19),
  /**
   * <pre>
   *心跳请求
   * </pre>
   *
   * <code>COMMAND_HEARTBEAT_REQ = 20;</code>
   */
  COMMAND_HEARTBEAT_REQ(20),
  /**
   * <pre>
   *已读消息;
   * </pre>
   *
   * <code>COMMAND_PUSH_IS_READED = 21;</code>
   */
  COMMAND_PUSH_IS_READED(21),
  /**
   * <pre>
   *转排队(机器会话转排队);
   * </pre>
   *
   * <code>COMMAND_PUSH_TO_QUEUE = 22;</code>
   */
  COMMAND_PUSH_TO_QUEUE(22),
  /**
   * <pre>
   *接待会话(客服主动 排队转客服会话);
   * </pre>
   *
   * <code>COMMAND_PUSH_PICK_UP_SESSION = 23;</code>
   */
  COMMAND_PUSH_PICK_UP_SESSION(23),
  /**
   * <pre>
   *转会话(客户主动 机器会话转客服会话);
   * </pre>
   *
   * <code>COMMAND_PUSH_TO_SESSION = 24;</code>
   */
  COMMAND_PUSH_TO_SESSION(24),
  ;

  /**
   * <pre>
   * 异常
   * </pre>
   *
   * <code>COMMAND_UNKNOW = 0;</code>
   */
  public static final int COMMAND_UNKNOW_VALUE = 0;
  /**
   * <pre>
   *上线
   * </pre>
   *
   * <code>COMMAND_ONLINE_REQ = 1;</code>
   */
  public static final int COMMAND_ONLINE_REQ_VALUE = 1;
  /**
   * <pre>
   *上线响应
   * </pre>
   *
   * <code>COMMAND_ONLINE_RESP = 2;</code>
   */
  public static final int COMMAND_ONLINE_RESP_VALUE = 2;
  /**
   * <pre>
   *传输
   * </pre>
   *
   * <code>COMMAND_TRANSMISSION_REQ = 3;</code>
   */
  public static final int COMMAND_TRANSMISSION_REQ_VALUE = 3;
  /**
   * <pre>
   *传输响应
   * </pre>
   *
   * <code>COMMAND_TRANSMISSION_RESP = 4;</code>
   */
  public static final int COMMAND_TRANSMISSION_RESP_VALUE = 4;
  /**
   * <pre>
   * 拦截
   * </pre>
   *
   * <code>COMMAND_INTERCEPT_REQ = 5;</code>
   */
  public static final int COMMAND_INTERCEPT_REQ_VALUE = 5;
  /**
   * <pre>
   * 拦截响应
   * </pre>
   *
   * <code>COMMAND_INTERCEPT_RESP = 6;</code>
   */
  public static final int COMMAND_INTERCEPT_RESP_VALUE = 6;
  /**
   * <pre>
   * 插入
   * </pre>
   *
   * <code>COMMAND_INSERT_REQ = 7;</code>
   */
  public static final int COMMAND_INSERT_REQ_VALUE = 7;
  /**
   * <pre>
   * 插入响应
   * </pre>
   *
   * <code>COMMAND_INSERT_RESP = 8;</code>
   */
  public static final int COMMAND_INSERT_RESP_VALUE = 8;
  /**
   * <pre>
   * 协同  
   * </pre>
   *
   * <code>COMMAND_SYNERGY_REQ = 9;</code>
   */
  public static final int COMMAND_SYNERGY_REQ_VALUE = 9;
  /**
   * <pre>
   * 协同响应
   * </pre>
   *
   * <code>COMMAND_SYNERGY_RESP = 10;</code>
   */
  public static final int COMMAND_SYNERGY_RESP_VALUE = 10;
  /**
   * <pre>
   *普通消息发送
   * </pre>
   *
   * <code>COMMAND_CHAT_REQ = 11;</code>
   */
  public static final int COMMAND_CHAT_REQ_VALUE = 11;
  /**
   * <pre>
   *普通消息回执
   * </pre>
   *
   * <code>COMMAND_CHAT_RESP = 12;</code>
   */
  public static final int COMMAND_CHAT_RESP_VALUE = 12;
  /**
   * <pre>
   *会话关闭请求
   * </pre>
   *
   * <code>COMMAND_CLOSE_REQ = 13;</code>
   */
  public static final int COMMAND_CLOSE_REQ_VALUE = 13;
  /**
   * <pre>
   *会话结束响应信息;
   * </pre>
   *
   * <code>COMMAND_CLOSE_RESP = 14;</code>
   */
  public static final int COMMAND_CLOSE_RESP_VALUE = 14;
  /**
   * <pre>
   *发出撤消消息指令
   * </pre>
   *
   * <code>COMMAND_CANCEL_MSG_REQ = 15;</code>
   */
  public static final int COMMAND_CANCEL_MSG_REQ_VALUE = 15;
  /**
   * <pre>
   *收到撤消消息指令
   * </pre>
   *
   * <code>COMMAND_CANCEL_MSG_RESP = 16;</code>
   */
  public static final int COMMAND_CANCEL_MSG_RESP_VALUE = 16;
  /**
   * <pre>
   * 未结束会话消息推送（重新上线）
   * </pre>
   *
   * <code>COMMAND_UNEND_SESSION_MSG = 17;</code>
   */
  public static final int COMMAND_UNEND_SESSION_MSG_VALUE = 17;
  /**
   * <pre>
   *创建会话;
   * </pre>
   *
   * <code>COMMAND_CREATE_SESSION = 18;</code>
   */
  public static final int COMMAND_CREATE_SESSION_VALUE = 18;
  /**
   * <pre>
   *向客服推送新的会话;
   * </pre>
   *
   * <code>COMMAND_PUSH_NEW_SESSION = 19;</code>
   */
  public static final int COMMAND_PUSH_NEW_SESSION_VALUE = 19;
  /**
   * <pre>
   *心跳请求
   * </pre>
   *
   * <code>COMMAND_HEARTBEAT_REQ = 20;</code>
   */
  public static final int COMMAND_HEARTBEAT_REQ_VALUE = 20;
  /**
   * <pre>
   *已读消息;
   * </pre>
   *
   * <code>COMMAND_PUSH_IS_READED = 21;</code>
   */
  public static final int COMMAND_PUSH_IS_READED_VALUE = 21;
  /**
   * <pre>
   *转排队(机器会话转排队);
   * </pre>
   *
   * <code>COMMAND_PUSH_TO_QUEUE = 22;</code>
   */
  public static final int COMMAND_PUSH_TO_QUEUE_VALUE = 22;
  /**
   * <pre>
   *接待会话(客服主动 排队转客服会话);
   * </pre>
   *
   * <code>COMMAND_PUSH_PICK_UP_SESSION = 23;</code>
   */
  public static final int COMMAND_PUSH_PICK_UP_SESSION_VALUE = 23;
  /**
   * <pre>
   *转会话(客户主动 机器会话转客服会话);
   * </pre>
   *
   * <code>COMMAND_PUSH_TO_SESSION = 24;</code>
   */
  public static final int COMMAND_PUSH_TO_SESSION_VALUE = 24;


  public final int getNumber() {
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static Command valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static Command forNumber(int value) {
    switch (value) {
      case 0: return COMMAND_UNKNOW;
      case 1: return COMMAND_ONLINE_REQ;
      case 2: return COMMAND_ONLINE_RESP;
      case 3: return COMMAND_TRANSMISSION_REQ;
      case 4: return COMMAND_TRANSMISSION_RESP;
      case 5: return COMMAND_INTERCEPT_REQ;
      case 6: return COMMAND_INTERCEPT_RESP;
      case 7: return COMMAND_INSERT_REQ;
      case 8: return COMMAND_INSERT_RESP;
      case 9: return COMMAND_SYNERGY_REQ;
      case 10: return COMMAND_SYNERGY_RESP;
      case 11: return COMMAND_CHAT_REQ;
      case 12: return COMMAND_CHAT_RESP;
      case 13: return COMMAND_CLOSE_REQ;
      case 14: return COMMAND_CLOSE_RESP;
      case 15: return COMMAND_CANCEL_MSG_REQ;
      case 16: return COMMAND_CANCEL_MSG_RESP;
      case 17: return COMMAND_UNEND_SESSION_MSG;
      case 18: return COMMAND_CREATE_SESSION;
      case 19: return COMMAND_PUSH_NEW_SESSION;
      case 20: return COMMAND_HEARTBEAT_REQ;
      case 21: return COMMAND_PUSH_IS_READED;
      case 22: return COMMAND_PUSH_TO_QUEUE;
      case 23: return COMMAND_PUSH_PICK_UP_SESSION;
      case 24: return COMMAND_PUSH_TO_SESSION;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<Command>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      Command> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<Command>() {
          public Command findValueByNumber(int number) {
            return Command.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.ty.chat.protocol.KfMessageOuterClass.getDescriptor().getEnumTypes().get(1);
  }

  private static final Command[] VALUES = values();

  public static Command valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private Command(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:protocol.Command)
}

